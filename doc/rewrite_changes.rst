.. role:: cc(code)
   :language: c

.. role:: cpp(code)
   :language: c++

Changes done while rewriting
============================

* Some classes were changed to structs
* There are changes from camelcase to underscore, too

RtMIDI's MidiMessage
--------------------

+-----------------------------------------+----------------------------------------------------------------+
| RtMIDI                                  | RMR                                                            |
+=========================================+================================================================+
| :cpp:`MidiMessage`                      | :cc:`MIDI_message` (typedef struct)                            |
+-----------------------------------------+----------------------------------------------------------------+
| :cpp:`std::vector<unsigned char> bytes` | :cc:`unsigned char bytes[MSG_SIZE]`, then :cc:`GArray * bytes` |
+-----------------------------------------+----------------------------------------------------------------+
| :cpp:`double timeStamp`                 | :cc:`double timestamp`                                         |
+-----------------------------------------+----------------------------------------------------------------+

AlsaMidiData
------------

+------------------------+---------------------------------------------------------+
| RtMIDI                 | RMR                                                     |
+========================+=========================================================+
| :cpp:`seq`             | :cc:`seq`                                               |
+------------------------+---------------------------------------------------------+
| :cpp:`AlsaMidiData`    | :cc:`Alsa_MIDI_data`, typedef added                     |
+------------------------+---------------------------------------------------------+
| :cpp:`portNum`         | renamed to :cc:`port_num`, **TODO**: seems to be unused |
+------------------------+---------------------------------------------------------+
| :cpp:`vport`           | :cc:`vport`                                             |
+------------------------+---------------------------------------------------------+
| :cpp:`subscription`    | :cc:`subscription`                                      |
+------------------------+---------------------------------------------------------+
| :cpp:`coder`           | :cc:`coder`                                             |
+------------------------+---------------------------------------------------------+
| :cpp:`bufferSize`      | :cc:`buffer_size`                                       |
+------------------------+---------------------------------------------------------+
| :cpp:`buffer`          | :cc:`buffer`                                            |
+------------------------+---------------------------------------------------------+
| :cpp:`thread`          | :cc:`thread`                                            |
+------------------------+---------------------------------------------------------+
| :cpp:`dummy_thread_id` | :cc:`dummy_thread_id`                                   |
+------------------------+---------------------------------------------------------+
| :cpp:`lastTime`        | :cc:`last_time`                                         |
+------------------------+---------------------------------------------------------+
| :cpp:`queue_id`        | :cc:`queue_id`                                          |
+------------------------+---------------------------------------------------------+
| :cpp:`trigger_fds[2]`  | :cc:`trigger_fds[2]`                                    |
+------------------------+---------------------------------------------------------+
| :cpp:`connected_`      | :cc:`port_connected`                                    |
+------------------------+---------------------------------------------------------+

RtMidiInData
------------

+------------------------+------------------------+
| RtMIDI                 | RMR                    |
+========================+========================+
| :cpp:`RtMidiInData`    | :cc:`MIDI_in_data`     |
+------------------------+------------------------+
| :cpp:`queue`           | :cc:`midi_async_queue` |
+------------------------+------------------------+
| :cpp:`message`         | :cc:`message`          |
+------------------------+------------------------+
| :cpp:`ignoreFlags`     | :cc:`ignore_flags`     |
+------------------------+------------------------+
| :cpp:`doInput`         | :cc:`do_input`         |
+------------------------+------------------------+
| :cpp:`firstMessage`    | :cc:`first_message`    |
+------------------------+------------------------+
| :cpp:`apiData`         | :cc:`amidi_data`       |
+------------------------+------------------------+
| :cpp:`usingCallback`   | :cc:`using_callback`   |
+------------------------+------------------------+
| :cpp:`userCallback`    | :cc:`user_callback`    |
+------------------------+------------------------+
| :cpp:`userData`        | :cc:`user_data`        |
+------------------------+------------------------+
| :cpp:`continueSysex`   | :cc:`continue_sysex`   |
+------------------------+------------------------+

RtMidiCallback function
-----------------------

+-----------------------+---------------------+
| RtMIDI                | RMR                 |
+=======================+=====================+
| :cpp:`RtMidiCallback` | :cc:`MIDI_callback` |
+-----------------------+---------------------+

MIDI input opening
------------------

+----------------------------+--------------------------+
| RtMIDI                     | RMR                      |
+============================+==========================+
| :cpp:`SND_SEQ_OPEN_DUPLEX` | :cc:`SND_SEQ_OPEN_INPUT` |
+----------------------------+--------------------------+

